          
          
           User.java
           
 package org.jsp.userproduct.dto;

import java.util.List;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;


@Entity
public class User {
@Id
@GeneratedValue(strategy = GenerationType.IDENTITY)
private int id;
private String name;
private long phone;
private String email;
private String password;
@OneToMany(mappedBy = "user")
private List<Product> product;

public int getId() {
	return id;
}
public void setId(int id) {
	this.id = id;
}
public String getName() {
	return name;
}
public void setName(String name) {
	this.name = name;
}
public long getPhone() {
	return phone;
}
public void setPhone(long phone) {
	this.phone = phone;
}
public String getEmail() {
	return email;
}
public void setEmail(String email) {
	this.email = email;
}
public String getPassword() {
	return password;
}
public void setPassword(String password) {
	this.password = password;
}
public List<Product> getProduct() {
	return product;
}
public void setProduct(List<Product> product) {
	this.product = product;
}
@Override
public String toString() {
	return "User [id=" + id + ", name=" + name + ", phone=" + phone + ", email=" + email + ", password=" + password
			+ ", product=" + product + "]";
}


}
 
 
            Product.java
            
package org.jsp.userproduct.dto;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;

@Entity
public class Product {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int id;
	private String name;
	private String descrip,brand;
	private String categery;
	private double price;
	@ManyToOne
	@JoinColumn(name = "user_id")
	private User user;

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getDescrip() {
		return descrip;
	}

	public void setDescrip(String descrip) {
		this.descrip = descrip;
	}

	public String getBrand() {
		return brand;
	}

	public void setBrand(String brand) {
		this.brand = brand;
	}

	public String getCategery() {
		return categery;
	}

	public void setCategery(String categery) {
		this.categery = categery;
	}

	public double getPrice() {
		return price;
	}

	public void setPrice(double price) {
		this.price = price;
	}

	public User getUser() {
		return user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Override
	public String toString() {
		return "Product [id=" + id + ", name=" + name + ", descrip=" + descrip + ", brand=" + brand + ", categery="
				+ categery + ", price=" + price + ", user=" + user + "]";
	}


}
            
            
            
            ProductDao.java
            
package org.jsp.userproduct.dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityTransaction;
import javax.persistence.NoResultException;
import javax.persistence.Persistence;
import javax.persistence.Query;

import org.jsp.userproduct.dto.Product;
import org.jsp.userproduct.dto.User;

public class ProductDao {
	EntityManager manager = Persistence.createEntityManagerFactory("dev").createEntityManager();
	EntityTransaction transaction = manager.getTransaction();

	public Product AddProduct(Product pro, int user_id) {
		User u = manager.find(User.class, user_id);
		if (u != null) {
			pro.setUser(u);
			u.getProduct().add(pro);
			manager.persist(pro);
			transaction.begin();
			transaction.commit();
			return pro;
		} else {
			return null;
		}
	}

	public List<Product> viewProduct(int user_id) {
		String qry = "select u.product from User u where u.id=?1";
		Query q = manager.createQuery(qry);
		q.setParameter(1, user_id);
		try {
			return (List<Product>) q.getResultList();
		} catch (NoResultException e) {
			return null;

		}
	}

	public Product viewProductBY(String categery) {
		String qry = "select p from Product p where p.categery=?1";
		Query q = manager.createQuery(qry);
		q.setParameter(1, categery);
		try {
			return (Product) q.getSingleResult();
		} catch (NoResultException e) {
			return null;

		}
	}
}
            
            
         
              UserDao.java
              
package org.jsp.userproduct.dao;

import javax.persistence.EntityManager;
import javax.persistence.EntityTransaction;
import javax.persistence.NoResultException;
import javax.persistence.Persistence;
import javax.persistence.Query;

import org.jsp.userproduct.dto.User;

public class UserDao {
	EntityManager manager = Persistence.createEntityManagerFactory("dev").createEntityManager();
	EntityTransaction transaction = manager.getTransaction();

	public User RegisterUser(User u) {

		manager.persist(u);
		transaction.begin();
		transaction.commit();

		return u;
	}

	public User varifyUser(long phone, String password) {
		String qry = "select u from User u where u.phone=?1 and u.password=?2";
		Query q = manager.createQuery(qry);
		q.setParameter(1, phone);
		q.setParameter(2, password);
		try {
			return (User) q.getSingleResult();
		} catch (NoResultException e) {
			return null;
		}
	}

	public User varifyUser(String email, String password) {
		String qry = "select u from User u where u.email=?1 and u.password=?2";
		Query q = manager.createQuery(qry);
		q.setParameter(1, email);
		q.setParameter(2, password);
		try {
			return (User) q.getSingleResult();
		} catch (NoResultException e) {
			return null;
		}
	}

	public User updateUser(User u) {

		manager.merge(u);
		transaction.begin();
		transaction.commit();

		return u;
	}

}
              